<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <%- include('../partials/styles') %>
    <style>
        .whatsapp-container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .filters {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            border: 1px solid #e9ecef;
        }

        .date-filters {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: center;
            margin-bottom: 15px;
        }

        .date-filter-btn {
            padding: 8px 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #fff;
            cursor: pointer;
            transition: all 0.2s;
        }

        .date-filter-btn.active {
            background-color: #25D366;
            color: white;
            border-color: #25D366;
        }

        .date-input {
            padding: 8px 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 150px;
        }

        .generate-btn {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
        }

        .summary-section {
            background-color: #fff;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .summary-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e9ecef;
        }

        .summary-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-bottom: 20px;
        }

        .stat-card {
            text-align: center;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 6px;
            border: 1px solid #e9ecef;
        }

        .stat-value {
            font-size: 24px;
            font-weight: bold;
            color: #2c3e50;
        }

        .stat-label {
            font-size: 12px;
            color: #6c757d;
            margin-top: 5px;
        }

        .message-preview {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            font-family: monospace;
            white-space: pre-wrap;
            max-height: 400px;
            overflow-y: auto;
            font-size: 14px;
            line-height: 1.4;
        }

        .send-panel {
            background-color: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            display: flex;
            gap: 15px;
            align-items: center;
            justify-content: space-between;
            flex-wrap: wrap;
        }

        .phone-input {
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 250px;
            font-size: 16px;
        }

        .send-btn {
            background-color: #25D366;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 16px;
        }

        .send-btn:hover:not(:disabled) {
            background-color: #128C7E;
        }

        .send-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .no-data {
            text-align: center;
            padding: 40px;
            color: #6c757d;
            font-style: italic;
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e9ecef;
        }

        .whatsapp-icon {
            width: 20px;
            height: 20px;
        }

        #whatsapp-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            text-align: center;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }

        .modal-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .modal-btn {
            padding: 10px 25px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: bold;
            font-size: 16px;
        }

        .open-btn {
            background-color: #25D366;
            color: white;
        }

        .cancel-btn {
            background-color: #e9ecef;
            color: #333;
        }

        @media (max-width: 768px) {
            .date-filters {
                flex-direction: column;
                align-items: flex-start;
            }

            .date-input {
                width: 100%;
            }

            .send-panel {
                flex-direction: column;
                align-items: stretch;
            }

            .phone-input {
                width: 100%;
            }

            .summary-stats {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        .home-btn {
            background-color: #007bff;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            text-decoration: none;
            font-size: 14px;
            font-weight: bold;
            margin-right: 10px;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            transition: background-color 0.2s;
        }

        .home-btn:hover {
            background-color: #0056b3;
            color: white;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <%- include('../partials/header') %>
    <nav class="breadcrumb">
        <div class="breadcrumb-content">
            <a href="/dashboard">üè† Dashboard</a>
            <span class="separator">></span>
            <span class="current">Send Bills via WhatsApp</span>
        </div>
    </nav>

     <main class="main-content">
        <div class="whatsapp-container">
            <h2>üì± Send Sales Summary via WhatsApp</h2>
            <p>Generate and send sales summary with filtered bill data to any WhatsApp number.</p>
            
            <br>
            <!-- Filters Section -->
            <div class="filters">
                <h3>üìÖ Select Date Range</h3>
                <form id="filterForm" action="/whatsapp" method="GET">
                    <div class="date-filters">
                        <button type="button" class="date-filter-btn <%= dateRange === 'today' ? 'active' : '' %>" data-range="today">Today</button>
                        <button type="button" class="date-filter-btn <%= dateRange === 'month' ? 'active' : '' %>" data-range="month">This Month</button>
                        <button type="button" class="date-filter-btn <%= dateRange === 'all' ? 'active' : '' %>" data-range="all">All Time</button>
                        <button type="button" class="date-filter-btn <%= dateRange === 'custom' ? 'active' : '' %>" data-range="custom">Custom Range</button>
                        
                        <div id="customDateInputs" style="<%= dateRange === 'custom' ? 'display: flex; gap: 10px; align-items: center;' : 'display: none;' %>">
                            <input type="date" name="fromDate" class="date-input" value="<%= fromDate %>">
                            <span>to</span>
                            <input type="date" name="toDate" class="date-input" value="<%= toDate %>">
                        </div>
                        
                        <input type="hidden" id="dateRangeInput" name="dateRange" value="<%= dateRange %>">
                    </div>
                    
                    <button type="submit" class="generate-btn">üîÑ Generate Summary</button>
                </form>
            </div>

            <!-- Sales Summary Section -->
            <% if (bills && bills.length > 0) { %>
                <div class="summary-section">
                    <div class="summary-header">
                        <h3>üìä Sales Summary</h3>
                        <span class="summary-period">
                            <% if (dateRange === 'today') { %>
                                Today's Sales
                            <% } else if (dateRange === 'month') { %>
                                This Month's Sales
                            <% } else if (dateRange === 'custom') { %>
                                <%= fromDate %> to <%= toDate %>
                            <% } else { %>
                                All Time Sales
                            <% } %>
                        </span>
                    </div>

                    <!-- Statistics Cards -->
                    <div class="summary-stats">
                        <div class="stat-card">
                            <div class="stat-value"><%= bills.length %></div>
                            <div class="stat-label">Total Bills</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value">‚Çπ<%= bills.reduce((sum, bill) => sum + parseFloat(bill.finalTotal || 0), 0).toFixed(2) %></div>
                            <div class="stat-label">Total Revenue</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value">‚Çπ<%= bills.reduce((sum, bill) => sum + parseFloat(bill.totalGst || 0), 0).toFixed(2) %></div>
                            <div class="stat-label">Total GST</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-value"><%= new Set(bills.map(bill => bill.customerName)).size %></div>
                            <div class="stat-label">Unique Customers</div>
                        </div>
                    </div>

                    <!-- WhatsApp Message Preview -->
                    <h4>WhatsApp Message Preview</h4>
                    <div class="message-preview" id="messagePreview">
                        <!-- Message content will be generated here -->
                    </div>

                    <!-- Send Panel -->
                    <div class="send-panel">
                        <div>
                            <label for="phoneInput" style="display: block; margin-bottom: 5px; font-weight: bold;">üìû WhatsApp Number:</label>
                            <input type="text" id="phoneInput" class="phone-input" placeholder="Enter WhatsApp number (e.g., 919876543210)" value="">
                            <small style="display: block; color: #6c757d; margin-top: 5px;">Include country code without + (e.g., 919876543210 for India)</small>
                        </div>
                        
                        <button id="sendButton" class="send-btn" disabled>
                            <svg class="whatsapp-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
                            </svg>
                            Send to WhatsApp
                        </button>
                    </div>
                </div>
            <% } else { %>
                <div class="no-data">
                    <h3>üìã No Bills Found</h3>
                    <p>No bills available for the selected date range. Try changing your filter criteria or add some bills first.</p>
                </div>
            <% } %>
        </div>
    </main>

    <script>
        let whatsappUrl = '';
        
        // Generate WhatsApp message
        function generateWhatsAppMessage() {
            const bills = <%- JSON.stringify(bills) %>;
            const companyName = '<%= companyName %>';
            const dateRange = '<%= dateRange %>';
            const fromDate = '<%= fromDate %>';
            const toDate = '<%= toDate %>';
            
            if (!bills || bills.length === 0) {
                return '';
            }
            
            // Start message with simple header
            let message = `================================\n`;
            message += `SALES SUMMARY\n`;
            message += `================================\n\n`;
            
            // Add date range info
            const today = new Date();
            if (dateRange === 'today') {
                message += `Date: ${today.toLocaleDateString()}\n`;
            } else if (dateRange === 'month') {
                message += `Period: This Month\n`;
            } else if (dateRange === 'custom') {
                message += `Period: ${fromDate} to ${toDate}\n`;
            } else {
                message += `Period: All Time\n`;
            }
            
            // Separate GST and Non-GST bills
            const gstBills = bills.filter(bill => bill.billNumber && bill.billNumber.includes('GST'));
            const nonGstBills = bills.filter(bill => bill.billNumber && !bill.billNumber.includes('GST'));
            
            // Calculate totals
            const totalRevenue = bills.reduce((sum, bill) => sum + parseFloat(bill.finalTotal || 0), 0);
            const gstRevenue = gstBills.reduce((sum, bill) => sum + parseFloat(bill.finalTotal || 0), 0);
            const nonGstRevenue = nonGstBills.reduce((sum, bill) => sum + parseFloat(bill.finalTotal || 0), 0);
            const uniqueCustomers = new Set(bills.map(bill => bill.customerName)).size;
            
            // Overall summary
            message += `--------------------------------\n`;
            message += `OVERALL SUMMARY\n`;
            message += `--------------------------------\n`;
            message += `Total Revenue: Rs.${totalRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}`;
            if (gstRevenue > 0 && nonGstRevenue > 0) {
                message += ` (GST: Rs.${gstRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})} + Non-GST: Rs.${nonGstRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})})`;
            }
            message += `\n`;            
            message += `Total Bills: ${bills.length}\n\n`;
            
            // GST Bills section
            if (gstBills.length > 0) {
                message += `--------------------------------\n`;
                message += `GST BILLS\n`;
                message += `--------------------------------\n`;
                
                let gstSubtotal = 0;
                let totalGstAmount = 0;
                
                gstBills.forEach((bill) => {
                    const finalTotal = parseFloat(bill.finalTotal || 0);
                    const gstAmount = parseFloat(bill.totalGst || 0);
                    const baseAmount = finalTotal - gstAmount;
                    
                    gstSubtotal += baseAmount;
                    totalGstAmount += gstAmount;
                    
                    message += `‚Ä¢ ${bill.billNumber} = Rs.${baseAmount.toLocaleString('en-IN', {minimumFractionDigits: 0, maximumFractionDigits: 2})} + GST: Rs.${gstAmount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})} = Rs.${finalTotal.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n`;
                });

                message += `\nGST Section Total: Rs.${gstSubtotal.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})} + Rs.${totalGstAmount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})} = Rs.${gstRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n`;

            //     message += `\n GST Section Total:\n`;
            //     message += `   Base: Rs.${gstSubtotal.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n`;
            //     message += `   + GST: Rs.${totalGstAmount.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n`;
            //     message += `   = Rs.${gstRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n\n`;
            }
            
            // Non-GST Bills section
            if (nonGstBills.length > 0) {
                message += `\n--------------------------------\n`;
                message += `NON-GST BILLS\n`;
                message += `--------------------------------\n`;
                
                nonGstBills.forEach((bill) => {
                    const finalTotal = parseFloat(bill.finalTotal || 0);
                    message += `‚Ä¢ ${bill.billNumber} = Rs.${finalTotal.toLocaleString('en-IN', {minimumFractionDigits: 0, maximumFractionDigits: 2})}\n`;
                });
                
                message += `\nNon-GST Section Total: Rs.${nonGstRevenue.toLocaleString('en-IN', {minimumFractionDigits: 0, maximumFractionDigits: 2})}\n\n`;
            }
            
            // Grand total
            message += `================================\n`;
            message += `GRAND TOTAL: Rs.${totalRevenue.toLocaleString('en-IN', {minimumFractionDigits: 2, maximumFractionDigits: 2})}\n`;
            message += `================================\n\n`;
            
            // Footer
            message += `***********************************\n`;
            message += `${companyName}\n`;
            message += `Billing Management System\n`;
            message += `***********************************`;
            
            return message;
        }
        
        document.addEventListener('DOMContentLoaded', function() {
            // Generate and display message preview
            const messagePreview = document.getElementById('messagePreview');
            const generatedMessage = generateWhatsAppMessage();
            if (messagePreview && generatedMessage) {
                messagePreview.textContent = generatedMessage;
            }
            
            // Date filter buttons
            const filterButtons = document.querySelectorAll('.date-filter-btn');
            const customDateInputs = document.getElementById('customDateInputs');
            const dateRangeInput = document.getElementById('dateRangeInput');

            filterButtons.forEach(button => {
                button.addEventListener('click', function() {
                    filterButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    
                    const range = this.getAttribute('data-range');
                    dateRangeInput.value = range;
                    
                    if (range === 'custom') {
                        customDateInputs.style.display = 'flex';
                    } else {
                        customDateInputs.style.display = 'none';
                        // Auto-submit for non-custom ranges
                        document.getElementById('filterForm').submit();
                    }
                });
            });
            
            // Phone input validation and send button state
            const phoneInput = document.getElementById('phoneInput');
            const sendButton = document.getElementById('sendButton');
            
            function updateSendButtonState() {
                const phoneValue = phoneInput.value.trim();
                const hasMessage = generatedMessage && generatedMessage.length > 0;
                sendButton.disabled = !(phoneValue.length > 0 && hasMessage);
            }
            
            if (phoneInput) {
                phoneInput.addEventListener('input', updateSendButtonState);
                updateSendButtonState(); // Initial check
            }
            
            // WhatsApp Modal
            const whatsappModal = document.getElementById('whatsapp-modal');
            const openWhatsAppBtn = document.getElementById('openWhatsAppBtn');
            const cancelBtn = document.getElementById('cancelBtn');
            
            // Send button click
            if (sendButton) {
                sendButton.addEventListener('click', function() {
                    const phoneNumber = phoneInput.value.trim();
                    const message = generatedMessage;
                    
                    if (!phoneNumber || !message) {
                        alert('Please enter a phone number and ensure there is data to send');
                        return;
                    }
                    
                    // Format phone number and create WhatsApp URL
                    const cleanedPhone = phoneNumber.replace(/\D/g, '');
                    const formattedPhone = cleanedPhone.startsWith('91') && cleanedPhone.length >= 12 
                        ? cleanedPhone 
                        : '91' + cleanedPhone.replace(/^0+/, '');
                    
                    const encodedMessage = encodeURIComponent(message);
                    whatsappUrl = `https://wa.me/${formattedPhone}/?text=${encodedMessage}`;
                    
                    // Force new window by creating a blank window first, then navigating
                    const newWindow = window.open('', 'whatsapp_window', 'width=1200,height=800,scrollbars=yes,resizable=yes,status=yes,location=yes,toolbar=yes,menubar=yes');
                    if (newWindow) {
                        newWindow.location.href = whatsappUrl;
                        newWindow.focus();
                    } else {
                        // Fallback if popup is blocked
                        alert('Popup blocked! Please allow popups for this site and try again, or manually open: ' + whatsappUrl);
                    }
                });
            }
            
            // Remove unused handlers since we're opening in popup window directly
            // No modal handlers needed anymore
            
        });
    </script>
    
    <%- include('../partials/scripts') %>
</body>
</html>