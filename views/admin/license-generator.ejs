<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/cuscssall1.min.css">
    <style>
        /* License Generator Page Specific Styles */
        .license-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .license-card {
            background: white;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 25px;
            margin-bottom: 25px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .license-card h3 {
            margin: 0 0 20px 0;
            color: #333;
            font-size: 1.3em;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 10px;
        }
        
        .license-info-grid {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .license-info-item {
            display: flex;
            flex-direction: column;
        }
        
        .license-info-item label {
            font-weight: 600;
            color: #666;
            margin-bottom: 5px;
            text-transform: uppercase;
            font-size: 0.9em;
        }
        
        .license-info-item span {
            font-size: 1.1em;
            color: #333;
        }
        
        .status-badge {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            text-transform: uppercase;
        }
        
        .status-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .status-warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        
        .status-danger {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .status-info {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }
        
        .form-group label i {
            margin-right: 8px;
            color: #007bff;
        }
        
        .form-group input,
        .form-group select {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e0e0e0;
            border-radius: 6px;
            font-size: 1em;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus,
        .form-group select:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 3px rgba(0,123,255,0.1);
        }
        
        .form-help {
            margin-top: 6px;
            font-size: 0.9em;
            color: #666;
            font-style: italic;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        
        .form-actions {
            text-align: center;
            margin-top: 30px;
        }
        
        .btn-large {
            padding: 15px 40px;
            font-size: 1.1em;
            border-radius: 6px;
        }
        
        .validity-preview {
            background: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
            padding: 15px;
            border-radius: 6px;
            margin-top: 15px;
        }
        
        .validity-preview i {
            margin-right: 8px;
            color: #17a2b8;
        }
        
        .generated-license {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            border-radius: 6px;
            padding: 20px;
            margin-top: 25px;
        }
        
        .generated-license h6 {
            margin: 0 0 15px 0;
            color: #155724;
            font-size: 1.1em;
        }
        
        .generated-license .info-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 15px;
        }
        
        .generated-license p {
            margin: 5px 0;
            color: #155724;
        }
        
        .download-area {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 20px;
            margin-top: 25px;
            text-align: center;
        }
        
        .download-area h6 {
            margin: 0 0 15px 0;
            color: #333;
            font-size: 1.1em;
        }
        
        .download-area p {
            margin: 10px 0 20px 0;
            color: #666;
        }
        
        .app-info-banner {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 25px;
        }
        
        .app-info-banner i {
            margin-right: 10px;
        }
        
        .app-info-banner strong {
            font-size: 1.1em;
        }
        
        @media (max-width: 768px) {
            .license-info-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .generated-license .info-row {
                grid-template-columns: 1fr;
                gap: 10px;
            }
            
            .license-container {
                padding: 15px;
            }
            
            .license-card {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="main-header">
        <div class="header-content">
            <div class="logo-section">
                <h1>üîê License Generator</h1>
                <p>Super Admin Panel</p>
            </div>
            <div class="user-section">
                <div class="user-info">
                    <div class="user-name"><%= user.fullName %></div>
                    <div class="user-role"><%= user.role %></div>
                </div>
                <form action="/logout" method="POST" style="display: inline;">
                    <button type="submit" class="logout-btn">
                        üö™ Logout
                    </button>
                </form>
            </div>
        </div>
    </header>

    <!-- Breadcrumb -->
    <nav class="breadcrumb">
        <div class="breadcrumb-content">
            <a href="/dashboard">üè† Dashboard</a>
            <span class="separator">/</span>
            <span class="current">License Generator</span>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="items-main">
        <div class="license-container">
            <!-- Page Header -->
            <div class="page-header">
                <div class="header-left">
                    <h2>üîê License Generator</h2>
                    <p>Generate license files for Vikram Steels Management System</p>
                </div>
                <div class="header-right">
                    <a href="/dashboard" class="btn btn-secondary">
                        ‚Üê Back to Dashboard
                    </a>
                </div>
            </div>
            
            <!-- Alert Messages -->
            <% if (typeof message !== 'undefined' && message) { %>
                <div class="alert alert-<%= message.type %>">
                    <%= message.type === 'success' ? '‚úÖ' : message.type === 'error' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è' %>
                    <%= message.text %>
                </div>
            <% } %>

            <!-- Current License Info -->
            <% if (currentLicense && currentLicense.status === 'valid') { %>
            <div class="license-card">
                <h3>üìã Current License Information</h3>
                <div class="license-info-grid">
                    <div class="license-info-item">
                        <label>Company:</label>
                        <span><%= currentLicense.companyName %></span>
                    </div>
                    <div class="license-info-item">
                        <label>Valid Until:</label>
                        <span><%= currentLicense.expiryDate %></span>
                    </div>
                    <div class="license-info-item">
                        <label>Days Remaining:</label>
                        <span class="status-badge status-<%= currentLicense.warningLevel === 'critical' ? 'danger' : currentLicense.warningLevel === 'warning' ? 'warning' : 'success' %>">
                            <%= currentLicense.daysRemaining %> days
                        </span>
                    </div>
                </div>
            </div>
            <% } %>
            
            <!-- License Generation Form -->
            <div class="license-card">
                <h3>‚ûï Generate New License</h3>
                
                <form id="licenseForm">
                    <!-- Company Name -->
                    <div class="form-group">
                        <label for="companyName">
                            üè¢ Company Name *
                        </label>
                        <input type="text" 
                               id="companyName" 
                               name="companyName" 
                               placeholder="Enter company name for the license"
                               required>
                        <div class="form-help">
                            This will be validated when the license is uploaded
                        </div>
                    </div>

                    <!-- Validity Period -->
                    <div class="form-group">
                        <label>
                            üìÖ Validity Period *
                        </label>
                        <div class="form-row">
                            <input type="number" 
                                   id="validityValue" 
                                   name="validityValue" 
                                   min="-365" 
                                   max="10" 
                                   value="1"
                                   required>
                            <select id="validityType" name="validityType" required>
                                <option value="days">Days</option>
                                <option value="months" selected>Months</option>
                                <option value="years">Years</option>
                            </select>
                        </div>
                        <div class="validity-preview">
                            ‚ÑπÔ∏è
                            <span id="validityPreview">License will be valid for 1 months</span>
                            <br>
                            <small><strong>Note:</strong> Use negative values (e.g., -2 days) to create expired licenses for testing</small>
                        </div>
                    </div>

                    <!-- Generate Button -->
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary btn-large">
                            üîê Generate License
                        </button>
                    </div>
                </form>
                
                <!-- Generated License Display -->
                <div id="generatedLicense" style="display: none;"></div>
                
                <!-- Download Area -->
                <div id="downloadArea" style="display: none;"></div>
            </div>

            <!-- Alert Area -->
            <div id="alertArea"></div>

        </div>
    </main>

    <script>
        // Update validity preview
        function updateValidityPreview() {
            const value = parseInt(document.getElementById('validityValue').value);
            const type = document.getElementById('validityType').value;
            const preview = document.getElementById('validityPreview');
            
            if (value && type) {
                if (value < 0) {
                    preview.textContent = `License will be EXPIRED by ${Math.abs(value)} ${type} (for testing)`;
                } else {
                    preview.textContent = `License will be valid for ${value} ${type}`;
                }
            }
        }

        // Event listeners for validity preview
        document.getElementById('validityValue').addEventListener('input', updateValidityPreview);
        document.getElementById('validityType').addEventListener('change', updateValidityPreview);

        // Form submission
        document.getElementById('licenseForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const data = Object.fromEntries(formData.entries());
            
            // Show loading
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;
            submitBtn.innerHTML = '‚è≥ Generating...';
            submitBtn.disabled = true;
            
            try {
                const response = await fetch('/license/generate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showGeneratedLicense(result.license, data);
                    showAlert('success', 'License generated successfully!');
                } else {
                    showAlert('error', result.error || 'Failed to generate license');
                }
                
            } catch (error) {
                console.error('Error:', error);
                showAlert('error', 'Failed to generate license. Please try again.');
            } finally {
                // Reset button
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        });

        // Show generated license
        function showGeneratedLicense(license, formData) {
            const container = document.getElementById('generatedLicense');
            container.innerHTML = `
                <div class="generated-license">
                    <h6>‚úÖ License Generated Successfully</h6>
                    <div class="info-row">
                        <div>
                            <p><strong>License ID:</strong> ${license.licenseId}</p>
                            <p><strong>Company:</strong> ${license.companyName}</p>
                        </div>
                        <div>
                            <p><strong>Validity:</strong> ${license.validityDays} days</p>
                            <p><strong>Expires:</strong> ${license.expiryDate}</p>
                        </div>
                    </div>
                </div>
            `;
            container.style.display = 'block';
            
            showDownloadArea(formData);
        }

        // Show download area
        function showDownloadArea(formData) {
            const container = document.getElementById('downloadArea');
            container.innerHTML = `
                <div class="download-area">
                    <h6>üì• Download License File</h6>
                    <p>Click the button below to download the license file (.lic) for the customer.</p>
                    <button type="button" class="btn btn-success" onclick="downloadLicense()">
                        üì• Download ${formData.companyName.replace(/[^a-zA-Z0-9]/g, '_')}.lic
                    </button>
                </div>
            `;
            container.style.display = 'block';
        }

        // Download license file
        async function downloadLicense() {
            const formData = new FormData(document.getElementById('licenseForm'));
            const data = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch('/license/download', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });
                
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    
                    const safeCompanyName = data.companyName.replace(/[^a-zA-Z0-9]/g, '_');
                    a.href = url;
                    a.download = `${safeCompanyName}_License_${Date.now()}.lic`;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                    
                    showAlert('success', 'License file downloaded successfully!');
                } else {
                    showAlert('error', 'Failed to download license file');
                }
            } catch (error) {
                console.error('Error:', error);
                showAlert('error', 'Failed to download license file');
            }
        }

        // Show alert
        function showAlert(type, message) {
            const alertArea = document.getElementById('alertArea');
            const alertClass = type === 'success' ? 'alert alert-success' : 'alert alert-danger';
            const icon = type === 'success' ? '‚úÖ' : '‚ö†Ô∏è';
            
            alertArea.innerHTML = `
                <div class="${alertClass}">
                    ${icon} ${message}
                </div>
            `;
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                const alert = alertArea.querySelector('.alert');
                if (alert) {
                    alert.remove();
                }
            }, 5000);
        }

        // Initialize
        updateValidityPreview();
    </script>
</body>
</html>
